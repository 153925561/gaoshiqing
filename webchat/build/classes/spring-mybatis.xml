<?xml version="1.0" encoding="UTF-8"?>

<beans xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.1.xsd
 http://www.springframework.org/schema/mvc 
 http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
 http://www.springframework.org/schema/aop 
 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
 http://www.springframework.org/schema/tx 
 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd" 
 xmlns:tx="http://www.springframework.org/schema/tx"
 xmlns:mvc="http://www.springframework.org/schema/mvc" 
 xmlns:context="http://www.springframework.org/schema/context"
  xmlns:p="http://www.springframework.org/schema/p" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns="http://www.springframework.org/schema/beans">

<!-- 默认的注解映射的支持 -->


<mvc:annotation-driven/>

<!-- 开启事务注解驱动 -->


<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>

<!-- 引入配置文件 -->


<!-- 官方解释 A property resource configurer that resolves placeholders in bean property values of context definitions. It pulls values from a properties file into bean definitions. The default placeholder syntax follows the Ant / Log4J / JSP EL style: ${...} -->



<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" id="propertyConfigurer">

<property value="classpath:jdbc.properties" name="location"/>

</bean>


<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">

<property value="${jdbc.driver}" name="driverClassName"/>

<property value="${jdbc.url}" name="url"/>

<property value="${jdbc.user}" name="username"/>

<property value="${jdbc.password}" name="password"/>

</bean>

<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->



<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">

<property name="dataSource" ref="dataSource"/>

<!-- 自动扫描mapping.xml文件 -->


<property value="classpath:org/cdlg/sunrise/entity/*.xml" name="mapperLocations"/>

</bean>

<!-- DAO接口所在包名，Spring会自动查找其下的类 Mybatis MapperScannerConfigurer 自动扫描 将Mapper接口生成代理注入到Spring -->

<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

<property value="org.cdlg.sunrise.dao" name="basePackage"/>

<property value="sqlSessionFactory" name="sqlSessionFactoryBeanName"/>

</bean>

<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->

<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">

<property name="dataSource" ref="dataSource"/>

</bean>

<!-- 自动扫描 -->

<context:component-scan base-package="org.cdlg.sunrise">

<context:exclude-filter expression="org.cdlg.sunrise.controller.*" type="regex"/>

<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" /> -->

</context:component-scan>

</beans>